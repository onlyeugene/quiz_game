{"version":3,"sources":["../src/type.ts","../src/shared/svg-wrapper.tsx","../src/shared/constants.ts","../src/loader/rotating-square.tsx"],"names":["DEFAULT_COLOR","DEFAULT_WAI_ARIA_ATTRIBUTE","SvgWrapper","styled","props","SVG_NAMESPACE","RotatingSquare","wrapperClass","color","height","width","strokeWidth","ariaLabel","wrapperStyle","visible","React"],"mappings":"sDAAO,IAAMA,CAAAA,CAAgB,SAAA,CAEhBC,EAA6B,CACxC,WAAA,CAAa,IAAA,CACb,IAAA,CAAM,aACR,CAAA,CCFO,IAAMC,EAAaC,CAAAA,CAAO,GAAA;AAAA,WAAA,EACpBC,CAAAA,EAAUA,CAAAA,CAAM,QAAA,CAAW,MAAA,CAAS,MAAO,CAAA;ACJjD,CAAA,CAAA,IAAMC,CAAAA,CAAgB,4BAAA,CCgBtB,IAAMC,CAAAA,CAA+D,CAAC,CAC3E,YAAA,CAAAC,CAAAA,CAAe,EAAA,CACf,KAAA,CAAAC,CAAAA,CAAQR,CAAAA,CACR,MAAA,CAAAS,EAAS,GAAA,CACT,KAAA,CAAAC,CAAAA,CAAQ,GAAA,CACR,WAAA,CAAAC,CAAAA,CAAc,CAAA,CACd,SAAA,CAAAC,EAAY,yBAAA,CACZ,YAAA,CAAAC,CAAAA,CAAe,GACf,OAAA,CAAAC,CAAAA,CAAU,IACZ,CAAA,GAEIC,EAAA,aAAA,CAACb,CAAAA,CAAA,CACC,KAAA,CAAOW,CAAAA,CACP,QAAA,CAAUC,CAAAA,CACV,SAAA,CAAWP,EACX,aAAA,CAAY,yBAAA,CACZ,YAAA,CAAYK,CAAAA,CACX,GAAGX,CAAAA,CAAAA,CAEJc,CAAAA,CAAA,aAAA,CAAC,KAAA,CAAA,CACC,QAAQ,KAAA,CACR,KAAA,CAAOV,CAAAA,CACP,CAAA,CAAE,KAAA,CACF,CAAA,CAAE,KAAA,CACF,OAAA,CAAQ,cACR,gBAAA,CAAiB,iBAAA,CACjB,MAAA,CAAQ,CAAA,EAAGI,CAAM,CAAA,CAAA,CACjB,KAAA,CAAO,CAAA,EAAGC,CAAK,GACf,aAAA,CAAY,qBAAA,CACZ,QAAA,CAAS,UAAA,CAAA,CAETK,CAAAA,CAAA,aAAA,CAAC,MAAA,CAAA,CACC,IAAA,CAAK,OACL,MAAA,CAAQP,CAAAA,CACR,WAAA,CAAaG,CAAAA,CACb,EAAE,IAAA,CACF,CAAA,CAAE,IAAA,CACF,KAAA,CAAM,KACN,MAAA,CAAO,IAAA,CAAA,CAEPI,CAAAA,CAAA,aAAA,CAAC,kBAAA,CAAA,CACC,aAAA,CAAc,WAAA,CACd,GAAA,CAAI,OACJ,IAAA,CAAK,SAAA,CACL,EAAA,CAAG,WAAA,CACH,KAAK,QAAA,CACL,EAAA,CAAG,WAAA,CACH,aAAA,CAAc,MACd,KAAA,CAAM,aAAA,CACR,CACF,CAAA,CACAA,CAAAA,CAAA,aAAA,CAAC,MAAA,CAAA,CAAK,CAAA,CAAE,KAAK,CAAA,CAAE,IAAA,CAAK,IAAA,CAAMP,CAAAA,CAAO,MAAM,IAAA,CAAK,MAAA,CAAO,IAAA,CAAA,CACjDO,CAAAA,CAAA,cAAC,SAAA,CAAA,CACC,aAAA,CAAc,QAAA,CACd,GAAA,CAAI,MAAA,CACJ,aAAA,CAAc,KAAA,CACd,IAAA,CAAK,KACL,EAAA,CAAG,GAAA,CACH,EAAA,CAAG,SAAA,CACH,KAAK,QAAA,CACL,KAAA,CAAM,kBAAA,CACR,CACF,CACF,CACF","file":"rotating-square.mjs","sourcesContent":["export const DEFAULT_COLOR = '#4fa94d'\n\nexport const DEFAULT_WAI_ARIA_ATTRIBUTE = {\n  'aria-busy': true,\n  role: 'progressbar',\n}\n\nexport type Style = {\n  [key: string]: string\n}\n\nexport interface PrimaryProps {\n  height?: string | number\n  width?: string | number\n  ariaLabel?: string\n  wrapperStyle?: Style\n  wrapperClass?: string\n  visible?: boolean\n}\n\nexport interface BaseProps extends PrimaryProps {\n  color?: string\n  /**\n   * Provide multiple colors to render a gradient instead of a solid color.\n   * When 2 or more colors are supplied a gradient <defs> will be injected and\n   * the primary color reference (fill or stroke) becomes url(#gradientId).\n   */\n  colors?: string[]\n  /** Type of gradient (linear or radial). Defaults to linear. */\n  gradientType?: 'linear' | 'radial'\n  /** Angle (in degrees) applied via rotate() transform for linear gradients. */\n  gradientAngle?: number\n}\n","import styled from 'styled-components'\n\n// eslint-disable-next-line tree-shaking/no-side-effects-in-initialization\nexport const SvgWrapper = styled.div<{ $visible: boolean }>`\n  display: ${props => (props.$visible ? 'flex' : 'none')};\n`\n","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg'\n","import React from 'react'\nimport { DEFAULT_COLOR, DEFAULT_WAI_ARIA_ATTRIBUTE, Style } from '../type'\nimport { SvgWrapper } from '../shared/svg-wrapper'\nimport { SVG_NAMESPACE } from '../shared/constants'\n\ntype RotatingSquareProps = {\n  wrapperClass?: string\n  color?: string\n  strokeWidth?: string | number\n  height?: string | number\n  width?: string | number\n  ariaLabel?: string\n  wrapperStyle?: Style\n  visible?: boolean\n}\n\nexport const RotatingSquare: React.FunctionComponent<RotatingSquareProps> = ({\n  wrapperClass = '',\n  color = DEFAULT_COLOR,\n  height = 100,\n  width = 100,\n  strokeWidth = 4,\n  ariaLabel = 'rotating-square-loading',\n  wrapperStyle = {},\n  visible = true,\n}): React.ReactElement => {\n  return (\n    <SvgWrapper\n      style={wrapperStyle}\n      $visible={visible}\n      className={wrapperClass}\n      data-testid=\"rotating-square-wrapper\"\n      aria-label={ariaLabel}\n      {...DEFAULT_WAI_ARIA_ATTRIBUTE}\n    >\n      <svg\n        version=\"1.1\"\n        xmlns={SVG_NAMESPACE}\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 100 100\"\n        enableBackground=\"new 0 0 100 100\"\n        height={`${height}`}\n        width={`${width}`}\n        data-testid=\"rotating-square-svg\"\n        xmlSpace=\"preserve\"\n      >\n        <rect\n          fill=\"none\"\n          stroke={color}\n          strokeWidth={strokeWidth}\n          x=\"25\"\n          y=\"25\"\n          width=\"50\"\n          height=\"50\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            dur=\"0.5s\"\n            from=\"0 50 50\"\n            to=\"180 50 50\"\n            type=\"rotate\"\n            id=\"strokeBox\"\n            attributeType=\"XML\"\n            begin=\"rectBox.end\"\n          />\n        </rect>\n        <rect x=\"27\" y=\"27\" fill={color} width=\"46\" height=\"50\">\n          <animate\n            attributeName=\"height\"\n            dur=\"1.3s\"\n            attributeType=\"XML\"\n            from=\"50\"\n            to=\"0\"\n            id=\"rectBox\"\n            fill=\"freeze\"\n            begin=\"0s;strokeBox.end\"\n          />\n        </rect>\n      </svg>\n    </SvgWrapper>\n  )\n}\n"]}