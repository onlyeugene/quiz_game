{"version":3,"sources":["../src/type.ts","../src/shared/svg-wrapper.tsx","../src/shared/constants.ts","../src/loader/tail-spin.tsx"],"names":["DEFAULT_COLOR","DEFAULT_WAI_ARIA_ATTRIBUTE","SvgWrapper","styled","props","SVG_NAMESPACE","TailSpin","height","width","strokeWidth","radius","color","ariaLabel","wrapperStyle","wrapperClass","visible","strokeWidthNum","viewBoxValue","halfStrokeWidth","processedRadius","React"],"mappings":"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","file":"tail-spin.cjs","sourcesContent":["export const DEFAULT_COLOR = '#4fa94d'\n\nexport const DEFAULT_WAI_ARIA_ATTRIBUTE = {\n  'aria-busy': true,\n  role: 'progressbar',\n}\n\nexport type Style = {\n  [key: string]: string\n}\n\nexport interface PrimaryProps {\n  height?: string | number\n  width?: string | number\n  ariaLabel?: string\n  wrapperStyle?: Style\n  wrapperClass?: string\n  visible?: boolean\n}\n\nexport interface BaseProps extends PrimaryProps {\n  color?: string\n  /**\n   * Provide multiple colors to render a gradient instead of a solid color.\n   * When 2 or more colors are supplied a gradient <defs> will be injected and\n   * the primary color reference (fill or stroke) becomes url(#gradientId).\n   */\n  colors?: string[]\n  /** Type of gradient (linear or radial). Defaults to linear. */\n  gradientType?: 'linear' | 'radial'\n  /** Angle (in degrees) applied via rotate() transform for linear gradients. */\n  gradientAngle?: number\n}\n","import styled from 'styled-components'\n\n// eslint-disable-next-line tree-shaking/no-side-effects-in-initialization\nexport const SvgWrapper = styled.div<{ $visible: boolean }>`\n  display: ${props => (props.$visible ? 'flex' : 'none')};\n`\n","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg'\n","import React, { FunctionComponent, ReactElement } from 'react'\nimport { BaseProps, DEFAULT_COLOR, DEFAULT_WAI_ARIA_ATTRIBUTE } from '../type'\nimport { SvgWrapper } from '../shared/svg-wrapper'\nimport { SVG_NAMESPACE } from '../shared/constants'\n\ninterface TailSpinProps extends BaseProps {\n  radius?: string | number\n  strokeWidth?: string | number\n}\n\nexport const TailSpin: FunctionComponent<TailSpinProps> = ({\n  height = 80,\n  width = 80,\n  strokeWidth = 2,\n  radius = 1,\n  color = DEFAULT_COLOR,\n  ariaLabel = 'tail-spin-loading',\n  wrapperStyle,\n  wrapperClass,\n  visible = true,\n}): ReactElement => {\n  const strokeWidthNum = parseInt(String(strokeWidth))\n  const viewBoxValue = strokeWidthNum + 36\n  const halfStrokeWidth = strokeWidthNum / 2\n  const processedRadius = halfStrokeWidth + parseInt(String(radius)) - 1\n  return (\n    <SvgWrapper\n      style={wrapperStyle}\n      $visible={visible}\n      className={wrapperClass}\n      data-testid=\"tail-spin-loading\"\n      aria-label={ariaLabel}\n      {...DEFAULT_WAI_ARIA_ATTRIBUTE}\n    >\n      <svg\n        width={width}\n        height={height}\n        viewBox={`0 0 ${viewBoxValue} ${viewBoxValue}`}\n        xmlns={SVG_NAMESPACE}\n        data-testid=\"tail-spin-svg\"\n      >\n        <defs>\n          <linearGradient x1=\"8.042%\" y1=\"0%\" x2=\"65.682%\" y2=\"23.865%\" id=\"a\">\n            <stop stopColor={color} stopOpacity=\"0\" offset=\"0%\" />\n            <stop stopColor={color} stopOpacity=\".631\" offset=\"63.146%\" />\n            <stop stopColor={color} offset=\"100%\" />\n          </linearGradient>\n        </defs>\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform={`translate(${halfStrokeWidth} ${halfStrokeWidth})`}>\n            <path\n              d=\"M36 18c0-9.94-8.06-18-18-18\"\n              id=\"Oval-2\"\n              stroke={color}\n              strokeWidth={strokeWidth}\n            >\n              <animateTransform\n                attributeName=\"transform\"\n                type=\"rotate\"\n                from=\"0 18 18\"\n                to=\"360 18 18\"\n                dur=\"0.9s\"\n                repeatCount=\"indefinite\"\n              />\n            </path>\n            <circle fill=\"#fff\" cx=\"36\" cy=\"18\" r={processedRadius}>\n              <animateTransform\n                attributeName=\"transform\"\n                type=\"rotate\"\n                from=\"0 18 18\"\n                to=\"360 18 18\"\n                dur=\"0.9s\"\n                repeatCount=\"indefinite\"\n              />\n            </circle>\n          </g>\n        </g>\n      </svg>\n    </SvgWrapper>\n  )\n}\n"]}